trigger:
  branches:
    include:
      - main
      - dev

pool:
  name: SandboxAgent

variables:
  workingDirectory: '$(System.DefaultWorkingDirectory)'
  devAppName: 'nimbus-notes-frontend-dev'
  devResourceGroup: 'rg-nimbus-dev'
  stagingAppName: 'nimbus-notes-frontend-staging'
  stagingResourceGroup: 'rg-nimbus-staging'

stages:
# ========================================
# BUILD STAGE
# ========================================
- stage: BuildApp
  displayName: 'Build and Package Node App'
  jobs:
    - job: BuildJob
      displayName: 'Install Dependencies and Package'
      steps:
        - task: NodeTool@0
          displayName: 'Install Node.js 22.x'
          inputs:
            versionSpec: '22.x'

        - script: |
            echo üì¶ Installing dependencies...
            npm install --production
            echo ‚úÖ Dependencies installed!
          displayName: 'Install Dependencies'
          workingDirectory: '$(workingDirectory)'

        - task: ArchiveFiles@2
          displayName: 'üì¶ Archive Node App'
          inputs:
            rootFolderOrFile: '$(workingDirectory)'
            includeRootFolder: false
            archiveType: 'zip'
            archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
            replaceExistingArchive: true
            verbose: true

        - task: PublishBuildArtifacts@1
          displayName: 'üì§ Publish Build Artifact'
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'

# ========================================
# DEPLOY TO DEVELOPMENT
# ========================================
- stage: DeployToDev
  displayName: 'Deploy to Dev Web App'
  dependsOn: BuildApp
  condition: eq(variables['Build.SourceBranchName'], 'dev')
  jobs:
    - deployment: DevDeploy
      environment: 'development'
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadBuildArtifacts@1
                displayName: '‚¨áÔ∏è Download Build Artifact'
                inputs:
                  buildType: 'current'
                  downloadType: 'single'
                  artifactName: 'drop'
                  downloadPath: '$(System.ArtifactsDirectory)'

              - task: AzureWebApp@1
                displayName: 'üöÄ Deploy to Dev Web App'
                inputs:
                  azureSubscription: 'nimbus-azure-connection'
                  appType: 'webAppLinux'
                  appName: '$(devAppName)'
                  resourceGroupName: '$(devResourceGroup)'
                  package: '$(System.ArtifactsDirectory)/drop/app.zip'
                  runtimeStack: 'NODE|22-lts'
                  startUpCommand: 'node server.js'

              - script: |
                  echo ‚úÖ Deployment to Development completed!
                  echo üåê URL: https://$(devAppName).azurewebsites.net
                displayName: '‚úÖ Verify Deployment'
                continueOnError: true

# ========================================
# DEPLOY TO STAGING
# ========================================
- stage: DeployToStaging
  displayName: 'Deploy to Staging Web App'
  dependsOn: BuildApp
  condition: eq(variables['Build.SourceBranchName'], 'main')
  jobs:
    - deployment: StagingDeploy
      environment: 'staging'
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadBuildArtifacts@1
                displayName: '‚¨áÔ∏è Download Build Artifact'
                inputs:
                  buildType: 'current'
                  downloadType: 'single'
                  artifactName: 'drop'
                  downloadPath: '$(System.ArtifactsDirectory)'

              - task: AzureWebApp@1
                displayName: 'üöÄ Deploy to Staging Web App'
                inputs:
                  azureSubscription: 'nimbus-azure-connection'
                  appType: 'webAppLinux'
                  appName: '$(stagingAppName)'
                  resourceGroupName: '$(stagingResourceGroup)'
                  package: '$(System.ArtifactsDirectory)/drop/app.zip'
                  runtimeStack: 'NODE|22-lts'
                  startUpCommand: 'node server.js'

              - script: |
                  echo ‚úÖ Deployment to Staging completed!
                  echo üåê URL: https://$(stagingAppName).azurewebsites.net
                displayName: '‚úÖ Verify Deployment'
                continueOnError: true
